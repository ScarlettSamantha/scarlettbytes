"""
This type stub file was generated by pyright.
"""

import contextlib
from typing import Callable, Generic, Iterator, Optional, TypeVar

T = TypeVar("T")
class ObjectPool(Generic[T]):
    """A pool of objects that release/creates/destroys as needed."""
    def __init__(self, obj_creator: Callable[[], T], after_remove: Optional[Callable] = ..., max_size: Optional[int] = ..., idle_timeout: int = ..., lock_generator: Optional[Callable] = ...) -> None:
        ...
    
    @property
    def used(self): # -> tuple[T, ...]:
        ...
    
    @property
    def free(self): # -> tuple[T, ...]:
        ...
    
    @contextlib.contextmanager
    def get_and_release(self, destroy_on_fail=...) -> Iterator[T]:
        ...
    
    def get(self): # -> T:
        ...
    
    def destroy(self, obj, silent=...) -> None:
        ...
    
    def release(self, obj, silent=...) -> None:
        ...
    
    def clear(self) -> None:
        ...
    


